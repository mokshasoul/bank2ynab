from _typeshed import Incomplete
from bank2ynab import user_input as user_input
from bank2ynab.api_interface import APIInterface as APIInterface
from bank2ynab.config_handler import ConfigHandler as ConfigHandler
from typing import Dict, List

class YNAB_API:
    transactions: Incomplete
    budget_id: Incomplete
    config_handler: Incomplete
    api_token: Incomplete
    api_connect: Incomplete
    def __init__(self, config_object: ConfigHandler, transactions: Incomplete | None = ...) -> None: ...
    def run(self, transaction_data: Dict[str, List]): ...
    def get_saved_accounts(self, t_data: Dict) -> Dict[str, Dict[str, str]]: ...
    def save_account_mappings(self, mapping: Dict[str, dict]): ...

def remove_invalid_accounts(prev_saved_map: Dict[str, Dict[str, str]], api_data: Dict[str, dict]) -> Dict[str, Dict[str, str]]: ...
def select_accounts(mappings: Dict[str, Dict[str, str]], budget_info: Dict[str, dict]): ...
def select_account(bank_name: str, budget_info: Dict[str, dict]): ...
def generate_name_id_list(input_dict: Dict) -> List[List]: ...
def apply_mapping(transaction_data: Dict[str, list], mapping: Dict[str, Dict[str, str]]) -> Dict[str, Dict[str, list]]: ...
