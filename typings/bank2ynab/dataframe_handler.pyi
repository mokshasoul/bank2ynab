import pandas as pd
from _typeshed import Incomplete

class DataframeHandler:
    df: Incomplete
    api_transaction_df: Incomplete
    empty: bool
    output_df: Incomplete
    def __init__(self) -> None: ...
    def output_csv(self, path: str) -> None: ...
    def run(self, *, file_path: str, delim: str, header_rows: int, footer_rows: int, encod: str, input_columns: list[str], output_columns: list[str], api_columns: list[str], cd_flags: list[str], date_format: str, date_dedupe: bool, fill_memo: bool, currency_fix: float) -> None: ...
    def parse_data(self, *, input_columns: list[str], output_columns: list[str], api_columns: list[str], cd_flags: list[str], date_format: str, date_dedupe: bool, fill_memo: bool, currency_fix: float) -> None: ...
    def remove_invalid_rows(self) -> None: ...
    def fill_api_columns(self) -> None: ...
    def auto_payee(self) -> None: ...
    def auto_memo(self) -> None: ...

def read_csv(file_path: str, delim: str, header_rows: int, footer_rows: int, encod: str) -> pd.DataFrame: ...
def merge_duplicate_columns(df: pd.DataFrame, input_columns: list[str]) -> pd.DataFrame: ...
def add_missing_columns(df: pd.DataFrame, input_cols: list[str], output_cols: list[str]) -> pd.DataFrame: ...
def cd_flag_process(df: pd.DataFrame, cd_flags: list[str]) -> pd.DataFrame: ...
def fix_amount(df: pd.DataFrame, currency_fix: float) -> pd.DataFrame: ...
def clean_monetary_values(num_series: pd.Series) -> pd.Series: ...
def clean_strings(string_series: pd.Series) -> pd.Series: ...
def fix_date(date_series: pd.Series, date_format: str) -> pd.Series: ...
def fill_empty_dates(date_series: pd.Series, fill_dates: bool) -> pd.Series: ...
def combine_dfs(df_list: list[pd.DataFrame]) -> pd.DataFrame: ...
